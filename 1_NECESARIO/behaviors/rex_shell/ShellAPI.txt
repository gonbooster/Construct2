1. Interface of "Action:Inject JS function objects"
- function(shell, fn, csv) { ... }
  
  
2. API of Shell plugin 
A. for injecting create callback, destroy callback, tick callback 
   in part 1.
- shell.InjectCreateCB(fn)
  :: fn is create callback
- shell.InjectDestroyCB(fn)
  :: fn is destroy callback  
- shell.InjectTickCB(fn)
  :: fn is tick callback
- shell.InjectFunction(fn)
  :: fn is function
 
B. dt
- shell.GetDt() 
  :: return dt
  
C. for accessing instance
- shell.GetX(inst)
  :: return inst.x
- shell.GetY(inst)
  :: return inst.y
- shell.GetWidth(inst)
  :: return inst.width
- shell.GetHeight(inst)
  :: return inst.height
- shell.GetAngle(inst)
  :: return inst.angle
- shell.GetOpacity(inst)
  :: return inst.opacity
- shell.GetVisible(inst)
  :: return inst.visible  
  
- shell.SetX(inst, value)
  :: inst.x = value
- shell.SetY(inst, value)
  :: inst.y = value
- shell.SetWidth(inst, value)
  :: inst.width = value
- shell.SetHeight(inst, value)
  :: inst.height = value 
- shell.SetAngle(inst, value)
  :: inst.angle = value 
- shell.SetOpacity(inst, value)
  :: inst.opacity = value
- shell.SetVisible(inst, value)
  :: inst.visible = value  
  
- shell.set_bbox_changed(inst)
  :: inst.set_bbox_changed()  
  

3. API in callback 
A. function prototype
- function(shell, fn, csv){ ... }
  :: fn is adapter of function plugin
  :: csv is adapter of csv plugin

B. API of adapter of function plugin
- fn.CallFn(name, args)
  :: args can be a hash, or some strings/numbers
  
C. API of adapter of csv plugin
- csv.Get(col, row, page)  
  :: page can be ignored            
- csv.Set(value, col, row, page)
  :: page can be ignored